Search.setIndex({"alltitles": {"Abstract": [[23, null]], "Alignment Methods": [[0, "alignment-methods"]], "Anaconda (Preferred)": [[89, "anaconda-preferred"]], "Basic Usage": [[89, "basic-usage"]], "Browse the Rebinned Data": [[88, "browse-the-rebinned-data"]], "Constructors": [[23, "constructors"], [40, null], [43, null], [45, null], [59, null]], "Data Simulation": [[0, "data-simulation"]], "Debugging when using coverage": [[89, "debugging-when-using-coverage"]], "Developer instructions": [[89, "developer-instructions"]], "Development tips (testing and coverage)": [[89, "development-tips-testing-and-coverage"]], "ETSpy": [[89, null]], "ETSpy Demo": [[88, null]], "Enum Values": [[1, null]], "Example Datasets": [[0, "example-datasets"]], "Experimental Needle-shaped Sample Tilt Series": [[88, "experimental-needle-shaped-sample-tilt-series"]], "File I/O": [[0, "file-i-o"]], "Filtered Backprojection of Single Slice (CPU)": [[88, "filtered-backprojection-of-single-slice-cpu"]], "General Information": [[0, null]], "Imports": [[88, "imports"]], "Installation": [[89, "installation"]], "Load Data": [[88, "load-data"]], "Methods": [[1, "methods"], [23, "methods"], [40, "methods"], [45, "methods"]], "Note": [[0, null], [89, null]], "Optional Jupyter components (higly recommended)": [[89, "optional-jupyter-components-higly-recommended"]], "Plot single image alongside the sinogram of the central slice": [[88, "plot-single-image-alongside-the-sinogram-of-the-central-slice"]], "Properties": [[23, "properties"], [40, "properties"], [45, "properties"]], "Rebin the data": [[88, "rebin-the-data"]], "Reconstruct the entire binned stack": [[88, "reconstruct-the-entire-binned-stack"]], "Reconstruction": [[0, "reconstruction"], [88, "reconstruction"], [88, "id2"]], "Related projects": [[89, "related-projects"]], "Releasing a new version": [[89, "releasing-a-new-version"]], "Releasing a version": [[89, "releasing-a-version"]], "Removal": [[89, "removal"]], "SIRT Error Analysis": [[88, "sirt-error-analysis"]], "Save the Reconstruction Results": [[88, "save-the-reconstruction-results"]], "See also": [[26, null], [27, null]], "Signals": [[0, "signals"]], "Simulated Catalyst Tilt Series": [[88, "simulated-catalyst-tilt-series"]], "Stack Registration": [[88, "stack-registration"], [88, "id1"]], "Testing a pre-release": [[89, "testing-a-pre-release"]], "Tilt Axis Alignment": [[88, "tilt-axis-alignment"]], "Tip": [[0, null], [0, null], [89, null]], "Using pip": [[89, "using-pip"]], "Utilities": [[0, "utilities"]]}, "docurls": ["api.html", "api/etspy.AlignmentMethod.html", "api/etspy.AlignmentMethod.COM.html", "api/etspy.AlignmentMethod.COM_CL.html", "api/etspy.AlignmentMethod.PC.html", "api/etspy.AlignmentMethod.STACK_REG.html", "api/etspy.AlignmentMethod.is_valid_value.html", "api/etspy.AlignmentMethod.values.html", "api/etspy.align.align_stack.html", "api/etspy.align.align_to_other.html", "api/etspy.align.apply_shifts.html", "api/etspy.align.calc_shifts_cl.html", "api/etspy.align.calc_shifts_com_cl.html", "api/etspy.align.calculate_shifts_com.html", "api/etspy.align.calculate_shifts_conservation_of_mass.html", "api/etspy.align.calculate_shifts_pc.html", "api/etspy.align.calculate_shifts_stackreg.html", "api/etspy.align.get_best_slices.html", "api/etspy.align.get_coms.html", "api/etspy.align.pad_line.html", "api/etspy.align.shift_crop.html", "api/etspy.align.tilt_com.html", "api/etspy.align.tilt_maximage.html", "api/etspy.base.CommonStack.html", "api/etspy.base.CommonStack.__init__.html", "api/etspy.base.CommonStack.change_data_type.html", "api/etspy.base.CommonStack.copy.html", "api/etspy.base.CommonStack.deepcopy.html", "api/etspy.base.CommonStack.invert.html", "api/etspy.base.CommonStack.normalize.html", "api/etspy.base.CommonStack.plot.html", "api/etspy.base.CommonStack.save.html", "api/etspy.base.CommonStack.save_movie.html", "api/etspy.base.CommonStack.save_raw.html", "api/etspy.base.CommonStack.shift_and_tilt_setter.html", "api/etspy.base.CommonStack.shifts.html", "api/etspy.base.CommonStack.stats.html", "api/etspy.base.CommonStack.tilts.html", "api/etspy.base.CommonStack.trans_stack.html", "api/etspy.base.MismatchedTiltError.html", "api/etspy.base.RecStack.html", "api/etspy.base.RecStack.__init__.html", "api/etspy.base.RecStack.plot_slices.html", "api/etspy.base.TomoShifts.html", "api/etspy.base.TomoShifts.__init__.html", "api/etspy.base.TomoStack.html", "api/etspy.base.TomoStack.__init__.html", "api/etspy.base.TomoStack.align_other.html", "api/etspy.base.TomoStack.filter.html", "api/etspy.base.TomoStack.manual_align.html", "api/etspy.base.TomoStack.plot_sinos.html", "api/etspy.base.TomoStack.recon_error.html", "api/etspy.base.TomoStack.reconstruct.html", "api/etspy.base.TomoStack.remove_projections.html", "api/etspy.base.TomoStack.set_tilts.html", "api/etspy.base.TomoStack.stack_register.html", "api/etspy.base.TomoStack.test_align.html", "api/etspy.base.TomoStack.test_correlation.html", "api/etspy.base.TomoStack.tilt_align.html", "api/etspy.base.TomoTilts.html", "api/etspy.base.TomoTilts.__init__.html", "api/etspy.datasets.get_catalyst_data.html", "api/etspy.datasets.get_needle_data.html", "api/etspy.io.get_dm_tilts.html", "api/etspy.io.get_mrc_tilts.html", "api/etspy.io.load.html", "api/etspy.io.load_serialem.html", "api/etspy.io.load_serialem_series.html", "api/etspy.io.parse_mdoc.html", "api/etspy.io.parse_mrc_header.html", "api/etspy.recon.astra_error.html", "api/etspy.recon.dart_segment.html", "api/etspy.recon.get_dart_boundaries.html", "api/etspy.recon.run.html", "api/etspy.recon.run_alg.html", "api/etspy.recon.run_dart.html", "api/etspy.simulation.add_noise.html", "api/etspy.simulation.create_catalyst_model.html", "api/etspy.simulation.create_cylinder_model.html", "api/etspy.simulation.create_model_tilt_series.html", "api/etspy.simulation.misalign_stack.html", "api/etspy.utils.calc_est_angles.html", "api/etspy.utils.calc_golden_ratio_angles.html", "api/etspy.utils.filter_stack.html", "api/etspy.utils.get_radial_mask.html", "api/etspy.utils.multiaverage.html", "api/etspy.utils.register_serialem_stack.html", "api/etspy.utils.weight_stack.html", "examples/etspy_demo.html", "index.html"], "envversion": {"sphinx": 63, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "indexentries": {}, "objects": {"etspy": [[1, 0, 1, "", "AlignmentMethod", "Allowed values for the stack alignment method."]], "etspy.AlignmentMethod": [[2, 1, 1, "", "COM", "Center of Mass method"], [3, 1, 1, "", "COM_CL", "Center of Mass with Common Line method"], [4, 1, 1, "", "PC", "Phase correlation method"], [5, 1, 1, "", "STACK_REG", "Stack Registration method"], [6, 2, 1, "", "is_valid_value", "Test if value is contained in the AlignmentMethod enum."], [7, 2, 1, "", "values", "Calculate a list of allowed values in the AlignmentMethod enum."]], "etspy.AlignmentMethod.is_valid_value": [[6, 3, 2, "", "value", "Test if value is contained in the AlignmentMethod enum."]], "etspy.align": [[8, 4, 1, "", "align_stack", "Compute the shifts for spatial registration."], [9, 4, 1, "", "align_to_other", "Spatially register a TomoStack using previously calculated shifts."], [10, 4, 1, "", "apply_shifts", "Apply a series of shifts to a TomoStack."], [11, 4, 1, "", "calc_shifts_cl", "Calculate shifts using the common line method."], [12, 4, 1, "", "calc_shifts_com_cl", "Calculate shifts using combined center of mass and common line methods."], [13, 4, 1, "", "calculate_shifts_com", "Align stack using a center of mass method."], [14, 4, 1, "", "calculate_shifts_conservation_of_mass", "Calculate shifts parallel to the tilt axis using conservation of mass."], [15, 4, 1, "", "calculate_shifts_pc", "Calculate shifts using the phase correlation algorithm."], [16, 4, 1, "", "calculate_shifts_stackreg", "Calculate shifts using PyStackReg."], [17, 4, 1, "", "get_best_slices", "Get best nslices for center of mass analysis."], [18, 4, 1, "", "get_coms", "Calculate the center of mass for indicated slices."], [19, 4, 1, "", "pad_line", "Pad a 1D array for FFT treatment without altering center location."], [20, 4, 1, "", "shift_crop", "Crop shifted stack to common area."], [21, 4, 1, "", "tilt_com", "Perform tilt axis alignment using center of mass (CoM) tracking."], [22, 4, 1, "", "tilt_maximage", "Perform automated determination of the tilt axis of a TomoStack."]], "etspy.align.align_stack": [[8, 3, 2, "p-cl_div_factor", "cl_div_factor", "(Only used when method ==COM_CL) Factor which determines the number of iterations of common line alignment to perform."], [8, 3, 2, "p-cl_ref_index", "cl_ref_index", "(Only used when method ==COM_CL) Reference slice for common line alignment."], [8, 3, 2, "p-cl_resolution", "cl_resolution", "(Only used when method ==COM_CL) Resolution for subpixel common line alignment."], [8, 3, 2, "p-com_ref_index", "com_ref_index", "(Only used when method ==COM_CL) Reference slice for center of mass alignment."], [8, 3, 2, "p-cuda", "cuda", "(Only used when method ==PC) Enable/disable the use of GPU-accelerated processes using CUDA."], [8, 3, 2, "p-method", "method", "Method by which to calculate the alignments."], [8, 3, 2, "p-nslices", "nslices", "(Only used when method ==COM) Number of slices to return."], [8, 3, 2, "p-p", "p", "(Only used when method ==COM) Padding element."], [8, 3, 2, "p-show_progressbar", "show_progressbar", "Enable/disable progress bar"], [8, 3, 2, "p-stack", "stack", "3-D numpy array containing the tilt series data"], [8, 3, 2, "p-start", "start", "Position in tilt series to use as starting point for the alignment. If None, the central projection is used."], [8, 3, 2, "p-upsample_factor", "upsample_factor", "(Only used when method ==PC) Factor by which to resample the data."], [8, 3, 2, "p-xrange", "xrange", "(Only used when method ==COM) The range for performing alignment."]], "etspy.align.align_to_other": [[9, 3, 2, "p-other", "other", "TomoStack to be aligned."], [9, 3, 2, "p-stack", "stack", "TomoStack which was previously aligned"]], "etspy.align.apply_shifts": [[10, 3, 2, "p-shifts", "shifts", "The X- (tilt parallel) and Y-shifts (tilt perpendicular) to be applied to each image."], [10, 3, 2, "p-stack", "stack", "The image series to be aligned"]], "etspy.align.calc_shifts_cl": [[11, 3, 2, "p-cl_div_factor", "cl_div_factor", "Factor used to determine number of iterations of alignment."], [11, 3, 2, "p-cl_ref_index", "cl_ref_index", "Tilt index of reference projection."], [11, 3, 2, "p-cl_resolution", "cl_resolution", "Degree of sub-pixel analysis"], [11, 3, 2, "p-stack", "stack", "The stack on which to calculate shifts"]], "etspy.align.calc_shifts_com_cl": [[12, 3, 2, "p-cl_div_factor", "cl_div_factor", "Factor which determines the number of iterations of common line alignment to perform."], [12, 3, 2, "p-cl_ref_index", "cl_ref_index", "Reference slice for common line alignment."], [12, 3, 2, "p-cl_resolution", "cl_resolution", "Resolution for subpixel common line alignment."], [12, 3, 2, "p-com_ref_index", "com_ref_index", "Reference slice for center of mass alignment."], [12, 3, 2, "p-stack", "stack", "Tilt series to be aligned"]], "etspy.align.calculate_shifts_com": [[13, 3, 2, "p-nslices", "nslices", "Number of slices to return"], [13, 3, 2, "p-stack", "stack", "The image series to be aligned"]], "etspy.align.calculate_shifts_conservation_of_mass": [[14, 3, 2, "p-p", "p", "Padding element"], [14, 3, 2, "p-stack", "stack", "Tilt series to be aligned."], [14, 3, 2, "p-xrange", "xrange", "The range for performing alignment"]], "etspy.align.calculate_shifts_pc": [[15, 3, 2, "p-cuda", "cuda", "Enable/disable the use of GPU-accelerated processes using CUDA"], [15, 3, 2, "p-show_progressbar", "show_progressbar", "Enable/disable progress bar"], [15, 3, 2, "p-stack", "stack", "The image series to be aligned"], [15, 3, 2, "p-start", "start", "Position in tilt series to use as starting point for the alignment"], [15, 3, 2, "p-upsample_factor", "upsample_factor", "Factor by which to resample the data"]], "etspy.align.calculate_shifts_stackreg": [[16, 3, 2, "p-show_progressbar", "show_progressbar", "Enable/disable progress bar"], [16, 3, 2, "p-stack", "stack", "The image series to be aligned"], [16, 3, 2, "p-start", "start", "Position in tilt series to use as starting point for the alignment."]], "etspy.align.get_best_slices": [[17, 3, 2, "p-nslices", "nslices", "Number of slices to return"], [17, 3, 2, "p-stack", "stack", "Tilt series from which to select the best slices"]], "etspy.align.get_coms": [[18, 3, 2, "p-slices", "slices", "Location of slices to use for center of mass calculation."], [18, 3, 2, "p-stack", "stack", "Tilt series from which to calculate the centers of mass."]], "etspy.align.pad_line": [[19, 3, 2, "p-line", "line", "The data to be padded (should be 1D)"], [19, 3, 2, "p-paddedsize", "paddedsize", "The size of the desired padded data."]], "etspy.align.shift_crop": [[20, 3, 2, "p-stack", "stack", "TomoStack which was previously aligned"]], "etspy.align.tilt_com": [[21, 3, 2, "p-nslices", "nslices", "Nubmer of slices to use for the analysis (only used if the slices parameter is not specified)."], [21, 3, 2, "p-slices", "slices", "Locations at which to perform the Center of Mass analysis."], [21, 3, 2, "p-stack", "stack", "TomoStack containing the tilt series data"]], "etspy.align.tilt_maximage": [[22, 3, 2, "p-also_shift", "also_shift", "If True, also calculate and apply the global shift perpendicular to the tilt by minimizing the sum of the reconstruction"], [22, 3, 2, "p-delta", "delta", "Angular increment for calculation"], [22, 3, 2, "p-limit", "limit", "Maximum rotation angle to use for calculation"], [22, 3, 2, "p-plot_results", "plot_results", "If True, plot the maximum image along with the lines determined by Hough analysis"], [22, 3, 2, "p-shift_limit", "shift_limit", "The limit of shifts applied if also_shift is set to True"], [22, 3, 2, "p-stack", "stack", "TomoStack array containing the tilt series data"]], "etspy.base": [[23, 0, 1, "", "CommonStack", "An abstract base class for tomography data."], [39, 6, 1, "", "MismatchedTiltError", "Error for when number of tilts in signal does not match tilt dimension."], [40, 0, 1, "", "RecStack", "Create a RecStack instance, used to hold the results of a reconstructed volume."], [43, 0, 1, "", "TomoShifts", "Create a TomoShifts instance to store image shift values of a tomography stack."], [45, 0, 1, "", "TomoStack", "Create a TomoStack instance, used to represent tomographic tilt series data."], [59, 0, 1, "", "TomoTilts", "Create a TomoTilts instance, used to hold the tilt values of a tomography stack."]], "etspy.base.CommonStack": [[24, 2, 1, "", "__init__", "Create an ETSpy signal instance."], [25, 2, 1, "", "change_data_type", "Change the data type of a stack."], [26, 2, 1, "", "copy", "Return a \"shallow copy\" of this Stack."], [27, 2, 1, "", "deepcopy", "Return a \"deep copy\" of this Stack."], [28, 2, 1, "", "invert", "Create a copy of a Stack with inverted contrast levels."], [29, 2, 1, "", "normalize", "Create a copy of a stack with normalized contrast levels."], [30, 2, 1, "", "plot", "Override of plot function to set default HyperSpy navigator to 'slider'."], [31, 2, 1, "", "save", "Save the signal in the specified format."], [32, 2, 1, "", "save_movie", "Save the Stack as an AVI movie file."], [33, 2, 1, "", "save_raw", "Save Stack data as a .raw/.rpl file pair."], [34, 2, 1, "", "shift_and_tilt_setter", "Set either self._tilts or self._shifts to an array."], [35, 5, 1, "", "shifts", "The stack's image shift values (in pixels)."], [36, 2, 1, "", "stats", "Print some basic statistics about Stack data."], [37, 5, 1, "", "tilts", "The stack's tilt values (in degrees)."], [38, 2, 1, "", "trans_stack", "Create a copy of a Stack, transformed using the skimage Affine transform."]], "etspy.base.CommonStack.__init__": [[24, 3, 2, "p-args", "args", "Additional non-keyword arguments passed to the Signal2D constructor"], [24, 3, 2, "p-data", "data", "The signal data."], [24, 3, 2, "p-kwargs", "kwargs", "Additional keyword arguments passed to the hyperspy.api.signals.Signal2D constructor"], [24, 3, 2, "p-shifts", "shifts", "A TomoShifts or ndarray containing the x/y image shift value (in pixels) for each projection in the stack."], [24, 3, 2, "p-tilts", "tilts", "A TomoTilts containing the tilt value (in degrees) for each projection in the stack. The navigation dimension should match the navigation dimension of the stack (one value per tilt image)."]], "etspy.base.CommonStack.change_data_type": [[25, 3, 2, "p-dtype", "dtype", "A string that represents a NumPy data type, or a specific data type"]], "etspy.base.CommonStack.normalize": [[29, 3, 2, "p-width", "width", "Number of standard deviations from the mean to set as maximum intensity level."]], "etspy.base.CommonStack.plot": [[30, 3, 2, "", "args", "Override of plot function to set default HyperSpy navigator to 'slider'."], [30, 3, 2, "", "kwargs", "Override of plot function to set default HyperSpy navigator to 'slider'."], [30, 3, 2, "", "navigator", "Override of plot function to set default HyperSpy navigator to 'slider'."]], "etspy.base.CommonStack.save": [[31, 3, 2, "", "extension", "Save the signal in the specified format."], [31, 3, 2, "", "file_format", "Save the signal in the specified format."], [31, 3, 2, "", "filename", "Save the signal in the specified format."], [31, 3, 2, "", "kwargs", "Save the signal in the specified format."], [31, 3, 2, "", "overwrite", "Save the signal in the specified format."]], "etspy.base.CommonStack.save_movie": [[32, 3, 2, "p-axis", "axis", "Projection axis for the output movie. Must be 'XY' (default), 'YZ' , or 'XZ'"], [32, 3, 2, "p-clim", "clim", "Upper and lower contrast limit to use for movie"], [32, 3, 2, "p-cmap", "cmap", "Matplotlib colormap to use for movie"], [32, 3, 2, "p-dpi", "dpi", "Resolution to save the images in the movie."], [32, 3, 2, "p-fps", "fps", "Number of frames per second at which to create the movie."], [32, 3, 2, "p-outfile", "outfile", "Filename for output."], [32, 3, 2, "p-start", "start", "Starting slice number for animation"], [32, 3, 2, "p-stop", "stop", "Ending slice number for animation"], [32, 3, 2, "p-title", "title", "Title to add at the top of the movie"]], "etspy.base.CommonStack.save_raw": [[33, 3, 2, "p-filename", "filename", "Name of file to receive data."]], "etspy.base.CommonStack.shift_and_tilt_setter": [[34, 3, 2, "p-mode", "mode", "Whether to work on the _shifts or the _tilts of the stack"], [34, 3, 2, "p-value", "value", "The values to set, as either an array, or TomoShifts, or TomoTilts. If None, the values will be initialized to an array of zeros of the appropriate shape."]], "etspy.base.CommonStack.trans_stack": [[38, 3, 2, "p-angle", "angle", "Angle in degrees by which to rotate the stack about the X-Y plane"], [38, 3, 2, "p-interpolation", "interpolation", "Mode of interpolation to employ."], [38, 3, 2, "p-xshift", "xshift", "Number of pixels by which to shift in the X dimension"], [38, 3, 2, "p-yshift", "yshift", "Number of pixels by which to shift the stack in the Y dimension"]], "etspy.base.RecStack": [[41, 2, 1, "", "__init__", "Create a RecStack signal."], [42, 2, 1, "", "plot_slices", "Plot slices along all three axes of a reconstruction stack."]], "etspy.base.RecStack.__init__": [[41, 3, 2, "p-args", "args", "Additional non-keyword arguments passed to Signal2D"], [41, 3, 2, "p-kwargs", "kwargs", "Additional keyword arguments passed to Signal2D"]], "etspy.base.RecStack.plot_slices": [[42, 3, 2, "p-vmax_std", "vmax_std", "Number of standard deviations from mean to use for scaling the displayed slices"], [42, 3, 2, "p-vmin_std", "vmin_std", "Number of standard deviations from mean to use for scaling the displayed slices"], [42, 3, 2, "p-xslice", "xslice", "Indices of slices to plot."], [42, 3, 2, "p-yslice", "yslice", "Indices of slices to plot."], [42, 3, 2, "p-zslice", "zslice", "Indices of slices to plot."]], "etspy.base.TomoShifts": [[44, 2, 1, "", "__init__", "Create a TomoShifts signal instance."]], "etspy.base.TomoShifts.__init__": [[44, 3, 2, "p-args", "args", "Additional non-keyword arguments passed to the Signal1D constructor."], [44, 3, 2, "p-data", "data", "The signal data."], [44, 3, 2, "p-kwargs", "kwargs", "Additional keyword arguments passed to the hyperspy.api.signals.Signal1D constructor."]], "etspy.base.TomoStack": [[46, 2, 1, "", "__init__", "Create a TomoStack signal."], [47, 2, 1, "", "align_other", "Apply the alignment calculated for one dataset to another."], [48, 2, 1, "", "filter", "Apply one of several image filters to an entire TomoStack."], [49, 2, 1, "", "manual_align", "Manually shift part of a stack with respect to another and return it as a copy."], [50, 2, 1, "", "plot_sinos", "Plot the TomoStack in sinogram orientation."], [51, 2, 1, "", "recon_error", "Determine the optimum number of iterations for reconstruction."], [52, 2, 1, "", "reconstruct", "Reconstruct a TomoStack series using one of the available methods."], [53, 2, 1, "", "remove_projections", "Return a copy of the TomoStack with certain projections removed from the series."], [54, 2, 1, "", "set_tilts", "Calibrate the tilt axis of the image stack."], [55, 2, 1, "", "stack_register", "Register stack spatially."], [56, 2, 1, "", "test_align", "Perform a reconstruction with limited slices for visual inspection."], [57, 2, 1, "", "test_correlation", "Test output of cross-correlation prior to alignment."], [58, 2, 1, "", "tilt_align", "Align the tilt axis of a TomoStack."]], "etspy.base.TomoStack.__init__": [[46, 3, 2, "p-args", "args", "Additional non-keyword arguments passed to Signal2D"], [46, 3, 2, "p-kwargs", "kwargs", "Additional keyword arguments passed to Signal2D"]], "etspy.base.TomoStack.align_other": [[47, 3, 2, "p-other", "other", "The tilt series which is to be aligned using the previously calculated parameters."]], "etspy.base.TomoStack.filter": [[48, 3, 2, "p-method", "method", "Type of filter to apply."], [48, 3, 2, "p-size", "size", "Size of filtering neighborhood."], [48, 3, 2, "p-taper", "taper", "Fraction of image size to pad to the mean."]], "etspy.base.TomoStack.manual_align": [[49, 3, 2, "p-display", "display", "If True, display the result."], [49, 3, 2, "p-nslice", "nslice", "Slice position at which to implement shift"], [49, 3, 2, "p-xshift", "xshift", "Number of pixels with which to shift the second portion of the stack relative to the first in the X dimension."], [49, 3, 2, "p-yshift", "yshift", "Number of pixels with which to shift the second portion of the stack relative to the first in the Y dimension."]], "etspy.base.TomoStack.plot_sinos": [[50, 3, 2, "p-args", "args", "Additional non-keyword arguments passed to plot()"], [50, 3, 2, "p-kwargs", "kwargs", "Additional keyword arguments passed to plot()"]], "etspy.base.TomoStack.recon_error": [[51, 3, 2, "p-algorithm", "algorithm", "Reconstruction algorithm use."], [51, 3, 2, "p-constrain", "constrain", "If True, perform SIRT reconstruction with a non-negativity constraint."], [51, 3, 2, "p-cuda", "cuda", "Whether or not to use CUDA-accelerated reconstruction algorithms."], [51, 3, 2, "", "iterations", "Determine the optimum number of iterations for reconstruction."], [51, 3, 2, "p-nslice", "nslice", "Slice location at which to perform the evaluation."], [51, 3, 2, "p-thresh", "thresh", "Value above which to constrain the reconstructed data"]], "etspy.base.TomoStack.reconstruct": [[52, 3, 2, "p-constrain", "constrain", "If True, output reconstruction is constrained above value given by thresh"], [52, 3, 2, "p-cuda", "cuda", "Whether or not to use CUDA-accelerated reconstruction algorithms."], [52, 3, 2, "p-dart_iterations", "dart_iterations", "Number of iterations to employ for DART reconstruction"], [52, 3, 2, "p-gray_levels", "gray_levels", "List of gray levels to use for DART reconstruction"], [52, 3, 2, "p-iterations", "iterations", "Number of iterations for the SIRT reconstruction (used with SIRT, SART, and DART methods) (default: 5)"], [52, 3, 2, "p-method", "method", "Reconstruction algorithm to use."], [52, 3, 2, "p-ncores", "ncores", "Number of cores to use for multithreaded reconstructions."], [52, 3, 2, "p-p", "p", "Probability for setting free pixels in DART reconstruction (only used if the reconstruction method is DART, default: 0.99)"], [52, 3, 2, "p-show_progressbar", "show_progressbar", "If True, show a progress bar for the reconstruction."], [52, 3, 2, "p-sino_filter", "sino_filter", "Filter for filtered backprojection."], [52, 3, 2, "p-thickness", "thickness", "Size of the output volume (in pixels) in the projection direction."], [52, 3, 2, "p-thresh", "thresh", "Value above which to constrain the reconstructed data"]], "etspy.base.TomoStack.remove_projections": [[53, 3, 2, "p-projections", "projections", "List of projection indices in integers to remove"]], "etspy.base.TomoStack.set_tilts": [[54, 3, 2, "p-increment", "increment", "Tilt increment between images"], [54, 3, 2, "p-start", "start", "Tilt angle of first image in stack"]], "etspy.base.TomoStack.stack_register": [[55, 3, 2, "p-cl_div_factor", "cl_div_factor", "(Only used when method ==COM_CL) Factor which determines the number of iterations of common line alignment to perform."], [55, 3, 2, "p-cl_ref_index", "cl_ref_index", "(Only used when method ==COM_CL) Reference slice for common line alignment."], [55, 3, 2, "p-cl_resolution", "cl_resolution", "(Only used when method ==COM_CL) Resolution for subpixel common line alignment."], [55, 3, 2, "p-com_ref_index", "com_ref_index", "(Only used when method ==COM_CL) Reference slice for center of mass alignment."], [55, 3, 2, "p-crop", "crop", "If True, crop aligned stack to eliminate border pixels."], [55, 3, 2, "p-cuda", "cuda", "Whether or not to use CUDA-accelerated reconstruction algorithms."], [55, 3, 2, "p-method", "method", "Algorithm to use for registration calculation."], [55, 3, 2, "p-nslices", "nslices", "(Only used when method ==COM) Number of slices to return."], [55, 3, 2, "p-p", "p", "(Only used when method ==COM) Padding element."], [55, 3, 2, "p-show_progressbar", "show_progressbar", "Enable/disable progress bar"], [55, 3, 2, "p-start", "start", "Position in tilt series to use as starting point for the alignment."], [55, 3, 2, "p-xrange", "xrange", "(Only used when method ==COM) The range for performing alignment."]], "etspy.base.TomoStack.test_align": [[56, 3, 2, "", "constrain", "Perform a reconstruction with limited slices for visual inspection."], [56, 3, 2, "p-cuda", "cuda", "Whether or not to use CUDA-accelerated reconstruction algorithms."], [56, 3, 2, "p-iterations", "iterations", "Number of iterations for the SIRT reconstruction (used with SIRT, and SART methods) (default: 50)"], [56, 3, 2, "p-method", "method", "Reconstruction algorithm to use."], [56, 3, 2, "p-slices", "slices", "Position of slices to use for the reconstruction."], [56, 3, 2, "p-thickness", "thickness", "Size of the output volume (in pixels) in the projection direction. If None (default), the y-size of the stack is used."], [56, 3, 2, "p-thresh", "thresh", "Value above which to constrain the reconstructed data"], [56, 3, 2, "p-tilt_rotation", "tilt_rotation", "Angle by which to rotate stack prior to reconstruction"], [56, 3, 2, "p-tilt_shift", "tilt_shift", "Number of pixels by which to shift the stack prior to reconstruction"], [56, 3, 2, "p-vmax_std", "vmax_std", "Number of standard deviations from mean (upper bound) to use for scaling the displayed slices"], [56, 3, 2, "p-vmin_std", "vmin_std", "Number of standard deviations from mean (lower bound) to use for scaling the displayed slices"]], "etspy.base.TomoStack.test_correlation": [[57, 3, 2, "p-images", "images", "List of two numbers indicating which projections to cross-correlate. If None, the first two images will be used."]], "etspy.base.TomoStack.tilt_align": [[58, 3, 2, "p-also_shift", "also_shift", "(Only used when method == \"MaxImage\") If True, also calculate and apply the global shift perpendicular to the tilt by minimizing the sum of the reconstruction"], [58, 3, 2, "p-delta", "delta", "(Only used when method == \"MaxImage\") Angular increment in degrees for MaxImage calculation"], [58, 3, 2, "p-limit", "limit", "(Only used when method == \"MaxImage\") Maximum rotation angle for MaxImage calculation"], [58, 3, 2, "p-method", "method", "Algorithm to use for registration alignment."], [58, 3, 2, "p-nslices", "nslices", "(Only used when method == \"CoM\") Nubmer of slices to use for the center of mass analysis (only used if the slices parameter is not specified)."], [58, 3, 2, "p-plot_results", "plot_results", "(Only used when method == \"MaxImage\") If True, plot the maximum image along with the lines determined by Hough analysis"], [58, 3, 2, "p-shift_limit", "shift_limit", "(Only used when method == \"MaxImage\") The limit of shifts applied if also_shift is set to True"], [58, 3, 2, "p-slices", "slices", "(Only used when method == \"CoM\") Locations at which to perform the Center of Mass analysis."]], "etspy.base.TomoTilts": [[60, 2, 1, "", "__init__", "Create a TomoTilts signal instance."]], "etspy.base.TomoTilts.__init__": [[60, 3, 2, "p-args", "args", "Additional non-keyword arguments passed to the Signal1D constructor."], [60, 3, 2, "p-data", "data", "The signal data."], [60, 3, 2, "p-kwargs", "kwargs", "Additional keyword arguments passed to the hyperspy.api.signals.Signal1D constructor."]], "etspy.datasets": [[61, 4, 1, "", "get_catalyst_data", "Load a model-simulated catalyst tilt series."], [62, 4, 1, "", "get_needle_data", "Load an experimental tilt series of needle-shaped specimen."]], "etspy.datasets.get_catalyst_data": [[61, 3, 2, "p-maxshift", "maxshift", "Upper bound for random shifts"], [61, 3, 2, "p-minshift", "minshift", "Lower bound for random shifts"], [61, 3, 2, "p-misalign", "misalign", "If True, apply random shifts to each projection to simulated drift"], [61, 3, 2, "p-noise", "noise", "If True, add Gaussian noise to the stack"], [61, 3, 2, "p-noise_factor", "noise_factor", "Percentage noise to be added."], [61, 3, 2, "p-tiltrotate", "tiltrotate", "Angle by which to rotate entire tilt series."], [61, 3, 2, "p-tiltshift", "tiltshift", "Number of pixels by which to shift entire tilt series."], [61, 3, 2, "p-y_only", "y_only", "If True, shifts are only applied along the Y-axis"]], "etspy.datasets.get_needle_data": [[62, 3, 2, "", "aligned", "Load an experimental tilt series of needle-shaped specimen."]], "etspy.io": [[63, 4, 1, "", "get_dm_tilts", "Extract tilts from DM tags."], [64, 4, 1, "", "get_mrc_tilts", "Extract tilts from an MRC file."], [65, 4, 1, "", "load", "Create a TomoStack object using data from a file."], [66, 4, 1, "", "load_serialem", "Load a multi-frame series collected by SerialEM."], [67, 4, 1, "", "load_serialem_series", "Load a multi-frame series collected by SerialEM."], [68, 4, 1, "", "parse_mdoc", "Parse experimental parameters from a SerialEM MDOC file."], [69, 4, 1, "", "parse_mrc_header", "Read the mrc header and return as dictionary."]], "etspy.io.get_dm_tilts": [[63, 3, 2, "p-s", "s", "A HyperSpy or ETSpy signal containing DigitalMigrograph metadata tags"]], "etspy.io.get_mrc_tilts": [[64, 3, 2, "p-filename", "filename", "Name of MRC file from which to extract tilts"], [64, 3, 2, "p-stack", "stack", "A HyperSpy or TomoStack signal"]], "etspy.io.load": [[65, 3, 2, "p-filename", "filename", "Name of file that contains data to be read. Accepted formats (.MRC, .DM3, .DM4)"], [65, 3, 2, "p-mdocs", "mdocs", "List of mdoc files for SerialEM data (optional)"], [65, 3, 2, "p-tilts", "tilts", "List of floats indicating the specimen tilt at each projection (optional)"]], "etspy.io.load_serialem": [[66, 3, 2, "p-mdocfile", "mdocfile", "Path to SerialEM metadata file for tilt series data."], [66, 3, 2, "p-mrcfile", "mrcfile", "Path to MRC file containing tilt series data."]], "etspy.io.load_serialem_series": [[67, 3, 2, "p-mdocfiles", "mdocfiles", "List of SerialEM metadata file paths for multi-frame tilt series data."], [67, 3, 2, "p-mrcfiles", "mrcfiles", "List of MRC file paths containing multi-frame tilt series data."]], "etspy.io.parse_mdoc": [[68, 3, 2, "p-mdoc_file", "mdoc_file", "Name of a SerialEM MDOC file"], [68, 3, 2, "p-series", "series", "If True, the MDOC files originated from a multiscan SerialEM acquisition. If False, the files originated from a single scan SerialEM acquisition."]], "etspy.io.parse_mrc_header": [[69, 3, 2, "p-filename", "filename", "Name of the MRC file to parse"]], "etspy.recon": [[70, 4, 1, "", "astra_error", "Perform SIRT reconstruction using the Astra toolbox algorithms."], [71, 4, 1, "", "dart_segment", "Segmentation step for DART Reconstruction."], [72, 4, 1, "", "get_dart_boundaries", "Boundary step for DART Reconstruction."], [73, 4, 1, "", "run", "Perform reconstruction of input tilt series."], [74, 4, 1, "", "run_alg", "Run CPU-based FBP, SIRT, or SART reconstruction algorithm using dask."], [75, 4, 1, "", "run_dart", "Run discrete algebraic reoncsturction technique (DART) algorithm."]], "etspy.recon.astra_error": [[70, 3, 2, "p-angles", "angles", "Projection angles in degrees."], [70, 3, 2, "p-constrain", "constrain", "If True, output reconstruction is constrained above value given by 'thresh'."], [70, 3, 2, "p-cuda", "cuda", "If True, use the CUDA-accelerated Astra algorithms."], [70, 3, 2, "p-iterations", "iterations", "Number of iterations for the SIRT reconstruction."], [70, 3, 2, "p-method", "method", "Reconstruction algorithm use."], [70, 3, 2, "p-sinogram", "sinogram", "Tilt series data either of the form [angles, x] or [angles, y, x] where y is the tilt axis and x is the projection axis."], [70, 3, 2, "p-thresh", "thresh", "Value above which to constrain the reconstructed data if constrain is True."]], "etspy.recon.dart_segment": [[71, 3, 2, "p-gray_vals", "gray_vals", "Grayscale values to assign the segmented regions."], [71, 3, 2, "p-rec", "rec", "Tomographic reconstruction."], [71, 3, 2, "p-thresholds", "thresholds", "Threshold values for segmentation."]], "etspy.recon.get_dart_boundaries": [[72, 3, 2, "p-segmented", "segmented", "Segmented reconstruction."]], "etspy.recon.run": [[73, 3, 2, "p-bp_filter", "bp_filter", "Filter to use for filtered backprojection"], [73, 3, 2, "p-constrain", "constrain", "If True, output reconstruction is constrained above value given by 'thresh'"], [73, 3, 2, "p-cuda", "cuda", "If True, use the CUDA-accelerated Astra algorithms."], [73, 3, 2, "p-dart_iterations", "dart_iterations", "Number of DART iterations"], [73, 3, 2, "p-gray_levels", "gray_levels", "Gray levels for DART reconstruction"], [73, 3, 2, "p-method", "method", "Reconstruction algorithm to use."], [73, 3, 2, "p-ncores", "ncores", "Number of cores to use for multithreaded CPU-based reconstructions"], [73, 3, 2, "p-niterations", "niterations", "Number of iterations for reconstruction (used with SIRT, SART, and DART methods)"], [73, 3, 2, "p-p", "p", "Probability for setting free pixels in DART reconstruction"], [73, 3, 2, "p-show_progressbar", "show_progressbar", "If True, show a progress bar for the reconstruction."], [73, 3, 2, "p-stack", "stack", "NumPy array containing the input tilt series for a TomoStack"], [73, 3, 2, "p-thickness", "thickness", "Limit for the height of the reconstruction."], [73, 3, 2, "p-thresh", "thresh", "Value above which to constrain the reconstructed data"], [73, 3, 2, "p-tilts", "tilts", "The tilt angles for the tilt series (usually found in the TomoStack.tilts.data property)."]], "etspy.recon.run_alg": [[74, 3, 2, "p-cfg", "cfg", "ASTRA algorithm configuration, as described for each of the algorithms present in the ASTRA docs (Algorithms)"], [74, 3, 2, "p-iters", "iters", "Number of iterations for the reconstruction"], [74, 3, 2, "p-proj_geom", "proj_geom", "ASTRA projection geometry, as described in the ASTRA docs (Toolbox concepts)"], [74, 3, 2, "p-sino", "sino", "Sinogram of shape (nangles, ny)"], [74, 3, 2, "p-vol_geom", "vol_geom", "ASTRA volume geometry, as described in the ASTRA docs (Toolbox concepts)"]], "etspy.recon.run_dart": [[75, 3, 2, "p-cfg", "cfg", "ASTRA algorithm configuration"], [75, 3, 2, "p-dart_iters", "dart_iters", "Number of iterations for the DART reconstruction"], [75, 3, 2, "p-gray_levels", "gray_levels", "Gray levels for DART reconstruction"], [75, 3, 2, "p-iters", "iters", "Number of iterations for the SART reconstruction"], [75, 3, 2, "p-p", "p", "Probability for free pixel determination"], [75, 3, 2, "p-proj_geom", "proj_geom", "ASTRA projection geometry"], [75, 3, 2, "p-sino", "sino", "Sinogram of shape (nangles, ny)"], [75, 3, 2, "p-thresholds", "thresholds", "Thresholds for DART reconstruction"], [75, 3, 2, "p-vol_geom", "vol_geom", "ASTRA volume geometry"]], "etspy.simulation": [[76, 4, 1, "", "add_noise", "Apply noise to a model tilt series and return as a copy."], [77, 4, 1, "", "create_catalyst_model", "Create a model data array that mimics a hetergeneous catalyst."], [78, 4, 1, "", "create_cylinder_model", "Create a model data array that mimics a needle shaped sample."], [79, 4, 1, "", "create_model_tilt_series", "Create a tilt series from a 3D volume."], [80, 4, 1, "", "misalign_stack", "Apply misalignment to a model tilt series."]], "etspy.simulation.add_noise": [[76, 3, 2, "p-noise_type", "noise_type", "Type of noise."], [76, 3, 2, "p-scale_factor", "scale_factor", "Amount of noise to add"], [76, 3, 2, "p-stack", "stack", "TomoStack simluation"]], "etspy.simulation.create_catalyst_model": [[77, 3, 2, "p-nparticles", "nparticles", "Number of particles to add"], [77, 3, 2, "p-particle_density", "particle_density", "Grayscale value to assign to the particles"], [77, 3, 2, "p-size_interval", "size_interval", "Lower and upper bounds (in that order) of the particle size"], [77, 3, 2, "p-support_density", "support_density", "Grayscale value to assign to the support material"], [77, 3, 2, "p-support_radius", "support_radius", "Radius (in pixels) of the support material"], [77, 3, 2, "p-volsize", "volsize", "X, Y, Z shape (in that order) of the volume"]], "etspy.simulation.create_cylinder_model": [[78, 3, 2, "p-add_others", "add_others", "If True, add a second and third cylinder to the model near the periphery. This is useful for testing the effects of additional objects entering the tilt series field of view."], [78, 3, 2, "p-blur", "blur", "If True, apply a Gaussian blur to the volume"], [78, 3, 2, "p-blur_sigma", "blur_sigma", "Sigma value for the Gaussiuan blur"], [78, 3, 2, "p-radius", "radius", "Radius of the cylinder to create"]], "etspy.simulation.create_model_tilt_series": [[79, 3, 2, "p-angles", "angles", "Projection angles for tilt series in degrees (optional)."], [79, 3, 2, "p-cuda", "cuda", "Whether or not to use CUDA-accelerated reconstruction algorithms."], [79, 3, 2, "p-model", "model", "3D array or HyperSpy signal containing the model volume to project to a tilt series"]], "etspy.simulation.misalign_stack": [[80, 3, 2, "p-interp_order", "interp_order", "The order of spline interpolation used by the scipy.ndimage.shift() or scipy.ndimage.rotate() function."], [80, 3, 2, "p-max_shift", "max_shift", "Maximum amount of jitter to apply to the stack"], [80, 3, 2, "p-min_shift", "min_shift", "Minimum amount of jitter to apply to the stack"], [80, 3, 2, "p-stack", "stack", "TomoStack simluation"], [80, 3, 2, "p-tilt_rotate", "tilt_rotate", "Amount of rotation to apply to the stack"], [80, 3, 2, "p-tilt_shift", "tilt_shift", "Number of pixels by which to offset the tilt axis from the center"], [80, 3, 2, "p-y_only", "y_only", "If True, limit the application of jitter to the y-direction only. Default is False"]], "etspy.utils": [[81, 4, 1, "", "calc_est_angles", "Caculate angles used for equally sloped tomography (EST)."], [82, 4, 1, "", "calc_golden_ratio_angles", "Calculate golden ratio angles for a given tilt range."], [83, 4, 1, "", "filter_stack", "Apply a Fourier filter to a sinogram or series of sinograms."], [84, 4, 1, "", "get_radial_mask", "Calculate a radial mask given a shape and center position."], [85, 4, 1, "", "multiaverage", "Register a multi-frame series collected by SerialEM."], [86, 4, 1, "", "register_serialem_stack", "Register a multi-frame series collected by SerialEM."], [87, 4, 1, "", "weight_stack", "Apply a weighting window to a stack perpendicular to the tilt axis."]], "etspy.utils.calc_est_angles": [[81, 3, 2, "p-num_points", "num_points", "Number of points in scan."]], "etspy.utils.calc_golden_ratio_angles": [[82, 3, 2, "p-nangles", "nangles", "Number of angles to calculate."], [82, 3, 2, "p-tilt_range", "tilt_range", "Tilt range in degrees."]], "etspy.utils.filter_stack": [[83, 3, 2, "p-cutoff", "cutoff", "Factor of sampling rate to use as the cutoff."], [83, 3, 2, "p-filter_name", "filter_name", "Type of filter to apply."], [83, 3, 2, "p-stack", "stack", "TomoStack with projection data"]], "etspy.utils.get_radial_mask": [[84, 3, 2, "p-center", "center", "(x, y) location of mask center, optional."], [84, 3, 2, "p-mask_shape", "mask_shape", "Shape (rows, cols) of the resulting mask."]], "etspy.utils.multiaverage": [[85, 3, 2, "p-nframes", "nframes", "Number of frames per tilt."], [85, 3, 2, "p-nx", "nx", "Pixels in x-dimension."], [85, 3, 2, "p-ny", "ny", "Pixels in y-dimension."], [85, 3, 2, "p-stack", "stack", "Array of shape [nframes, ny, nx]."]], "etspy.utils.register_serialem_stack": [[86, 3, 2, "", "ncpus", "Register a multi-frame series collected by SerialEM."], [86, 3, 2, "p-stack", "stack", "Signal of shape [ntilts, nframes, ny, nx]."]], "etspy.utils.weight_stack": [[87, 3, 2, "p-accuracy", "accuracy", "A string indicating the accuracy level for weighting."], [87, 3, 2, "p-stack", "stack", "The stack to be weighted."]]}, "objnames": {"0": ["py", "class", "Python class"], "1": ["py", "attribute", "Python attribute"], "2": ["py", "method", "Python method"], "3": ["py", "parameter", "Python parameter"], "4": ["py", "function", "Python function"], "5": ["py", "property", "Python property"], "6": ["py", "exception", "Python exception"]}, "objtypes": {"0": "py:class", "1": "py:attribute", "2": "py:method", "3": "py:parameter", "4": "py:function", "5": "py:property", "6": "py:exception"}, "terms": {"": [0, 23, 26, 27, 31, 35, 37, 40, 45, 63, 88, 89], "0": [8, 10, 12, 22, 23, 24, 38, 40, 42, 45, 48, 49, 51, 52, 55, 56, 58, 61, 70, 73, 76, 79, 80, 83, 88, 89], "00": 88, "000156": 8, "0005": [8, 87], "01": 88, "015": [8, 87], "04296474": 88, "05": [8, 12, 55], "052103": 81, "07": 89, "07124838": 88, "1": [0, 8, 10, 19, 22, 24, 42, 48, 56, 58, 60, 61, 78, 82, 86, 87, 88], "10": [8, 21, 22, 38, 56, 58, 75, 81, 82, 87, 88, 89], "100": [32, 58, 77, 88, 89], "1038": [8, 88], "11": [8, 87], "1103": 81, "1109": [8, 75], "1117": 82, "1186": [8, 87], "12": 77, "120": 52, "1200": 88, "121": 52, "123201": 82, "13": 89, "13140": 88, "1364": 8, "140": 88, "15": [32, 38, 77], "150": 88, "151": 88, "15441192": 88, "15467813": 88, "156": 8, "158": 8, "16": 88, "160": 58, "165": 88, "18": 88, "180": 79, "19": 88, "19360526": 88, "1998": 8, "1d": [0, 19, 70], "2": [8, 10, 24, 38, 44, 52, 56, 61, 73, 76, 88], "20": [8, 14, 22, 55, 58, 73, 88], "200": 77, "2000": 88, "2005": 81, "2008": 8, "2011": [75, 82], "2012": 8, "2015": [8, 87], "2024": 89, "203": 88, "205": 88, "20it": 88, "2131661": 75, "2135c": 88, "249": 88, "250": 88, "255": 77, "256": [38, 88], "27": 8, "27it": 88, "3": [8, 15, 21, 23, 29, 38, 40, 45, 56, 58, 80, 88, 89], "30": [78, 88, 89], "300": 88, "32879191": 88, "33": 8, "33492": 88, "34it": 88, "3660298": 82, "39": 88, "39544994": 88, "3a2": 89, "3d": [0, 70, 79], "4": [8, 56, 88], "402": 88, "41": 8, "42": 89, "444": 8, "447": 8, "45": 88, "483": 8, "49": 88, "49159244": 88, "499": 88, "5": [8, 12, 38, 42, 48, 51, 52, 55, 61, 77, 78, 80, 83, 88], "50": [21, 51, 56, 58, 70, 82, 88], "500": 88, "6": 88, "600": 77, "60801": 88, "650848": 8, "668": 88, "69it": 88, "7": [8, 87], "72": 81, "77": 38, "8": [8, 12, 55, 88], "83": 8, "86691788": 88, "9": [88, 89], "90": 88, "97467891": 88, "99": [52, 73, 88], "A": [8, 24, 25, 35, 37, 58, 63, 64, 67, 68, 70, 75, 82, 87, 89], "As": 87, "At": 89, "By": 89, "For": [0, 88, 89], "If": [0, 8, 11, 12, 16, 21, 22, 24, 33, 34, 42, 44, 49, 51, 52, 53, 55, 56, 57, 58, 60, 61, 68, 70, 73, 78, 79, 80, 84, 88, 89], "In": [0, 88], "It": [0, 53, 88, 89], "On": 89, "One": 24, "The": [0, 8, 10, 11, 12, 13, 14, 15, 16, 19, 22, 23, 24, 33, 34, 35, 37, 40, 42, 44, 45, 47, 55, 58, 60, 65, 67, 73, 80, 87, 88, 89], "Then": 13, "There": 89, "These": 0, "To": [88, 89], "Will": 67, "_shift": [23, 34, 40, 45], "_tilt": [23, 34, 40, 45], "a0": 89, "abl": 89, "about": [23, 36, 38, 40, 44, 45, 60, 88], "abov": [51, 52, 56, 70, 73, 89], "abstract": 0, "acceler": [8, 15, 51, 52, 55, 56, 70, 73, 79, 88, 89], "accept": 65, "access": [0, 89], "accomplish": 89, "account": 89, "accuraci": 87, "acquisit": [68, 88], "activ": 89, "ad": 61, "adapt": 75, "add": [32, 61, 76, 77, 78, 89], "add_nois": [0, 76], "add_oth": 78, "addit": [0, 24, 41, 44, 46, 50, 60, 78, 88, 89], "addition": 0, "advanc": [8, 87], "affin": [23, 38, 40, 45], "afmhot": 32, "after": [10, 21, 70, 88, 89], "al": [8, 88], "algebra": [0, 75], "algebraic": 52, "algorithm": [0, 8, 15, 51, 52, 55, 56, 58, 70, 73, 74, 75, 79], "ali": [58, 88], "alig": [8, 89], "align": [1, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 45, 47, 51, 52, 55, 56, 57, 58, 62, 86, 87, 89], "align_oth": [45, 47], "align_stack": [0, 1, 8, 55], "align_to_oth": [0, 9], "alignmentmethod": [0, 1, 2, 3, 4, 5, 6, 7, 8, 55], "all": [8, 12, 23, 31, 40, 42, 45, 55, 85, 88, 89], "allow": [0, 1, 7, 89], "along": [0, 17, 22, 40, 42, 58, 61], "alreadi": 0, "also": [0, 22, 58, 88, 89], "also_shift": [22, 58], "alter": [0, 19], "altern": 53, "amount": [76, 80], "an": [0, 21, 23, 24, 32, 34, 40, 45, 48, 58, 62, 64, 68, 69, 79, 88, 89], "analysi": [0, 11, 13, 17, 21, 22, 58, 89], "analyz": 58, "angl": [0, 22, 38, 54, 56, 58, 61, 63, 64, 70, 73, 79, 81, 82], "angular": [22, 58], "ani": [0, 30, 69, 89], "anim": 32, "anoth": [45, 47, 49], "api": [0, 24, 30, 44, 60, 88, 89], "append": [33, 89], "appli": [0, 8, 10, 12, 13, 15, 16, 22, 45, 47, 48, 58, 61, 76, 78, 80, 83, 87], "applic": 80, "apply_shift": [0, 10], "approach": [0, 8, 58, 89], "appropri": [21, 34, 58], "approxim": 0, "apt": 89, "ar": [0, 8, 10, 13, 14, 17, 23, 24, 26, 27, 30, 31, 38, 40, 45, 52, 53, 55, 56, 58, 61, 87, 88, 89], "area": [0, 20], "arg": [23, 24, 30, 40, 41, 43, 44, 45, 46, 50, 59, 60], "argument": [23, 24, 30, 31, 40, 41, 44, 45, 46, 50, 60], "arrai": [0, 8, 19, 22, 23, 24, 34, 40, 44, 45, 47, 58, 60, 67, 70, 73, 77, 78, 79, 84, 85, 88], "as_signal2d": 88, "assign": [71, 77], "associ": 89, "assort": 0, "assum": 89, "astra": [0, 51, 52, 56, 70, 73, 74, 75, 79, 89], "astra_error": [0, 70], "attempt": 56, "attribut": 88, "auto": 89, "autom": [0, 22, 58], "automat": [21, 56, 58, 89], "avail": [45, 52, 58, 88, 89], "averag": [85, 86], "avi": [23, 32, 40, 45], "ax": [40, 42, 67, 88], "axes_decor": 88, "axes_manag": [10, 88], "axhlin": 88, "axi": [0, 8, 11, 12, 13, 14, 17, 21, 22, 24, 32, 45, 47, 54, 58, 61, 70, 80, 87], "b": [81, 82], "backend": [88, 89], "backproject": [52, 73], "bar": [8, 15, 16, 52, 55, 73], "barlett": [52, 73], "base": [0, 8, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 70, 73, 74, 87, 88, 89], "basic": [23, 36, 40, 45, 88], "batenburg": 75, "been": 47, "befor": 88, "being": 89, "below": 51, "best": [0, 17], "between": [8, 34, 51, 54, 61, 88], "binari": 89, "blackman": [52, 73], "blur": 78, "blur_sigma": 78, "bool": [0, 1, 6, 8, 15, 16, 22, 49, 51, 52, 55, 56, 58, 61, 62, 68, 70, 73, 78, 79, 80], "border": 55, "both": [26, 48, 89], "bound": [56, 61, 77], "boundari": [0, 72], "bp_filter": 73, "bpf": 48, "breakpoint": 89, "browser": 89, "build": 89, "buildssourc": 89, "bump": 89, "c": [8, 89], "cacul": [0, 81], "calc_est_angl": [0, 81], "calc_golden_ratio_angl": [0, 82], "calc_shifts_cl": [0, 11], "calc_shifts_com_cl": [0, 8, 12, 55], "calcul": [0, 1, 7, 8, 9, 11, 12, 14, 15, 16, 18, 22, 45, 47, 55, 58, 82, 84, 88], "calculate_shifts_com": [0, 8, 13, 55], "calculate_shifts_conservation_of_mass": [0, 14], "calculate_shifts_pc": [0, 8, 15], "calculate_shifts_stackreg": [0, 16], "calibr": [45, 54], "can": [0, 24, 44, 58, 60, 88, 89], "capabl": 89, "catalyst": [0, 61, 62, 77], "caus": 88, "cd": 89, "center": [0, 1, 2, 3, 8, 12, 13, 17, 18, 19, 21, 55, 58, 80, 84, 87, 88], "central": [8, 55], "certain": [45, 53], "cfg": [0, 52, 74, 75], "chang": [23, 25, 40, 45, 51, 89], "change_data_typ": [23, 25, 40, 45], "change_dtyp": 25, "chemic": [8, 87], "choos": 89, "chosen": [8, 11, 12, 55, 56], "ci": 89, "cl": [1, 3, 8, 55], "cl_div_factor": [8, 11, 12, 55], "cl_ref_index": [8, 11, 12, 55], "cl_resolut": [8, 11, 12, 55], "clamp": [21, 58], "class": [0, 1, 23, 24, 40, 43, 44, 45, 53, 59, 60, 88], "classmethod": [1, 6, 7], "clim": 32, "clone": 89, "closest": [8, 11, 12, 16], "cmap": [32, 88], "co": 83, "code": [0, 8, 34, 75, 89], "coeffici": 88, "col": 84, "collect": [0, 66, 67, 85, 86], "color": 88, "colormap": 32, "com": [0, 1, 2, 3, 8, 21, 45, 55, 58, 88, 89], "com_cl": [1, 3, 8, 55], "com_ref_index": [8, 12, 55], "combin": [0, 8, 12, 22, 55, 58, 88], "command": [0, 89], "common": [0, 1, 3, 8, 11, 12, 20, 55, 88], "commonli": 0, "commonstack": [0, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 45], "compar": [21, 43, 59, 88], "compat": 88, "compil": 89, "complet": [88, 89], "comput": [0, 8], "concept": 74, "conda": 89, "configur": [74, 75, 89], "conserv": [0, 14], "consol": 89, "constrain": [51, 52, 56, 70, 73, 88], "constraint": [51, 52], "constructor": [0, 24, 44, 60], "consult": [0, 31], "contain": [0, 1, 6, 8, 21, 22, 24, 35, 37, 42, 51, 52, 61, 62, 63, 65, 66, 67, 68, 70, 73, 79, 88], "content": 89, "contrast": [23, 28, 29, 32, 40, 45], "contribut": 89, "control": 8, "conveni": 0, "convers": 25, "copi": [0, 8, 9, 10, 20, 21, 23, 26, 27, 28, 29, 38, 40, 45, 48, 49, 53, 55, 58, 76, 80], "core": [52, 73], "correct": [0, 24, 34, 89], "correl": [0, 1, 4, 8, 15, 45, 55, 57, 88], "correspond": 83, "cosin": [52, 73, 83], "could": 89, "cov": 89, "cover": 88, "cpu": [0, 70, 73, 74], "cr": 88, "creat": [0, 23, 24, 28, 29, 32, 38, 40, 41, 43, 44, 45, 46, 59, 60, 65, 77, 78, 79, 89], "create_catalyst_model": [0, 77], "create_cylinder_model": [0, 78], "create_model_tilt_seri": [0, 79], "creation": 0, "credenti": 89, "crop": [0, 20, 55, 88], "cross": [45, 57], "cubic": 38, "cuda": [8, 15, 51, 52, 55, 56, 70, 73, 79, 88, 89], "cupi": 89, "current": [0, 88, 89], "custom": [43, 59], "cutoff": 83, "cylind": [21, 58, 78, 88], "d": [8, 28, 29, 38, 48, 51, 52, 55, 58, 88], "dart": [0, 51, 52, 56, 71, 72, 73, 75], "dart_it": 75, "dart_iter": [52, 73], "dart_seg": [0, 71], "dask": [0, 74], "data": [8, 13, 15, 19, 21, 22, 23, 24, 25, 26, 27, 33, 36, 40, 43, 44, 45, 47, 51, 52, 56, 59, 60, 65, 66, 67, 70, 73, 77, 78, 79, 83, 89], "dataset": [28, 29, 38, 45, 47, 48, 51, 52, 55, 58, 61, 62, 88, 89], "date": 89, "debugg": 89, "debugpi": 89, "decis": [51, 52, 56, 79], "dedic": [0, 89], "deep": [23, 27, 40, 45], "deepcopi": [23, 26, 27, 40, 45, 52], "default": [8, 12, 23, 30, 32, 38, 40, 42, 45, 51, 52, 55, 56, 70, 73, 79, 80, 83, 84, 87, 89], "degre": [11, 23, 24, 37, 38, 40, 45, 58, 70, 79, 81, 82, 88], "delta": [22, 58], "demonstr": 88, "depend": 89, "describ": [8, 74, 87], "design": 0, "desir": [0, 19], "desktop": 89, "detail": [0, 1, 8, 31, 52, 55, 89], "detect": [58, 89], "determin": [0, 8, 11, 12, 21, 22, 45, 51, 55, 58, 75, 87], "dev": 89, "deviat": [29, 42, 56], "dict": [0, 45, 50, 68, 69, 74, 75], "dictionari": [0, 68, 69], "differ": [8, 51, 88, 89], "digitalmigrograph": 63, "dimens": [0, 11, 24, 33, 35, 37, 38, 39, 43, 49, 59, 85, 88], "dimension": [19, 73], "direct": [52, 56, 80], "directli": [0, 23, 24, 89], "directori": 89, "disabl": [8, 15, 16, 55, 89], "discreat": 52, "discret": [0, 75], "discuss": 89, "displai": [42, 49, 56, 89], "distribut": [0, 89], "dm": [0, 63], "dm3": [0, 65], "dm4": [0, 65], "do": [23, 24, 89], "doc": [74, 89], "docstr": 55, "document": [23, 31, 40, 45, 52, 88, 89], "doe": [0, 39, 44, 60], "doi": [8, 75, 81, 82, 87, 88], "done": 89, "download": 88, "dpi": 32, "drift": 61, "dtype": [23, 25, 40, 45], "due": 89, "duplic": [26, 27, 34], "dure": [0, 88], "e": [8, 23, 73, 89], "each": [10, 11, 12, 13, 15, 16, 18, 24, 35, 37, 51, 58, 60, 61, 65, 67, 70, 74, 86, 88], "easier": 0, "easili": 0, "edg": [58, 87], "edit": 89, "editor": 89, "effect": [78, 87], "effici": 8, "either": [0, 23, 24, 34, 38, 40, 44, 45, 51, 58, 60, 70, 73, 89], "electron": [8, 87, 89], "element": [8, 14, 55], "elimin": 55, "emphas": 88, "emploi": [38, 52], "enabl": [8, 15, 16, 55, 89], "end": 32, "enforc": [43, 59], "eng": 82, "enhanc": 88, "ensur": [26, 27, 89], "enter": 78, "entir": [45, 48, 61], "enum": [0, 6, 7, 8, 55], "env": 89, "environ": 89, "equal": [0, 81], "equival": [0, 38], "error": [0, 39, 51, 70], "est": [0, 81], "estim": 88, "et": [8, 88], "etspi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "evalu": 51, "evenli": 79, "exampl": [28, 29, 38, 48, 51, 52, 55, 58, 89], "except": [0, 39], "exclud": 89, "expect": [21, 58, 88], "experiment": [0, 62, 68], "export": 89, "expos": 0, "extens": [0, 23, 31, 40, 45, 89], "extract": [0, 63, 64], "f": [81, 88, 89], "factor": [8, 11, 12, 15, 55, 83, 88], "fals": [0, 8, 15, 22, 49, 52, 55, 58, 61, 62, 68, 70, 73, 78, 80, 84, 88, 89], "fbp": [0, 51, 52, 56, 73, 74, 88], "fbp_cuda": 52, "fbp_reconstruct": 88, "featur": [0, 58], "feel": 89, "few": [0, 89], "fft": [0, 19], "fib": 88, "field": 78, "fienup": 8, "fig": [42, 56, 57], "figur": [42, 45, 56, 57], "file": [23, 32, 33, 40, 45, 64, 65, 66, 67, 68, 69, 89], "file_format": [31, 88], "filenam": [0, 23, 31, 32, 33, 40, 45, 64, 65, 69], "film": 88, "filter": [0, 22, 45, 48, 52, 73, 83], "filter_nam": 83, "filter_stack": [0, 83], "filtertyp": 52, "final": [88, 89], "first": [13, 49, 54, 57, 88, 89], "fit": [58, 88], "five": 88, "flat": [52, 73], "float": [0, 8, 11, 12, 22, 23, 32, 38, 40, 42, 45, 48, 51, 52, 54, 55, 56, 58, 61, 65, 68, 70, 73, 75, 76, 78, 83], "follow": [0, 89], "form": 70, "format": [23, 31, 40, 45, 65, 88], "forster": 81, "forward": [51, 88], "found": 73, "fourier": [0, 83], "fp": 32, "fraction": 48, "frame": [0, 32, 66, 67, 85, 86], "free": [52, 73, 75, 89], "frequenc": 83, "from": [0, 17, 18, 29, 42, 45, 53, 56, 63, 64, 65, 68, 69, 75, 79, 80, 88, 89], "full": [56, 88], "function": [0, 18, 23, 25, 26, 27, 30, 34, 40, 45, 58, 80, 88, 89], "futur": 89, "g": [23, 73, 89], "gaussian": [52, 61, 73, 76, 78], "gaussiuan": 78, "gcf": 88, "gener": 89, "geometri": [74, 75], "get": [0, 17, 89], "get_best_slic": [0, 17], "get_catalyst_data": [0, 61, 88], "get_com": [0, 18], "get_dart_boundari": [0, 72], "get_dm_tilt": [0, 63], "get_mrc_tilt": [0, 64], "get_needle_data": [0, 28, 29, 38, 48, 51, 52, 55, 58, 62, 88], "get_radial_mask": [0, 84], "gist": 89, "git": 89, "github": [88, 89], "githubusercont": 89, "given": [0, 52, 70, 73, 82, 84, 85], "global": [8, 22, 58, 87], "golden": [0, 82], "gpu": [8, 15, 88, 89], "grai": [52, 73, 75], "gray_level": [52, 73, 75], "gray_val": 71, "grayscal": [71, 77], "greatli": 89, "group": 89, "guizar": 8, "h": 88, "ha": 89, "hack": 89, "ham": [52, 73], "han": 83, "handl": 89, "hang": 89, "hann": [52, 73, 83], "harri": [52, 73], "have": [14, 17, 24, 34, 35, 37, 47, 67, 89], "hdf5": 88, "head": 89, "header": [0, 69], "headless": 89, "height": 73, "held": 0, "helper": [0, 53, 89], "hetergen": [0, 77], "high": [87, 89], "highest": [14, 17], "hit": 89, "hold": [0, 40, 44, 59, 60], "hood": 89, "hough": [22, 58], "hspy": 88, "html": 89, "htmlcov": 89, "http": [8, 81, 82, 87, 89], "hyperspi": [0, 23, 24, 25, 30, 31, 40, 43, 44, 45, 59, 60, 63, 64, 79, 88, 89], "i": [1, 6, 8, 10, 12, 13, 21, 22, 23, 24, 34, 38, 43, 44, 47, 51, 52, 53, 55, 56, 58, 59, 60, 67, 68, 70, 73, 78, 80, 83, 84, 87, 88, 89], "id": 89, "ideal": [21, 58, 88], "ieee": 8, "ignor": 89, "imag": [0, 8, 10, 12, 13, 15, 16, 22, 23, 24, 32, 35, 40, 43, 44, 45, 48, 54, 57, 58, 67, 87], "imagej": 8, "implement": [8, 49], "import": [0, 28, 29, 38, 48, 51, 52, 55, 58, 89], "inapplic": [51, 56], "inav": [53, 88], "includ": [47, 89], "incompat": 89, "increment": [22, 45, 54, 58], "index": [11, 88], "indic": [0, 18, 42, 53, 57, 65, 87, 89], "inferno": 88, "inform": [44, 60, 88, 89], "inherit": [25, 88], "initi": [24, 34], "inlin": 88, "input": [0, 8, 10, 19, 21, 22, 28, 29, 38, 48, 51, 55, 58, 73, 74, 75, 76, 80, 83, 87, 88], "inspect": [45, 51, 56, 89], "instanc": [0, 23, 24, 40, 43, 44, 45, 59, 60], "instanti": 23, "instead": [0, 24, 25, 53], "instrument": 89, "int": [0, 8, 11, 12, 13, 14, 15, 16, 17, 19, 21, 23, 29, 32, 40, 42, 45, 48, 49, 51, 52, 55, 56, 57, 58, 61, 70, 73, 74, 75, 77, 78, 80, 81, 82, 84, 85, 86], "int64": 88, "integ": 53, "integratedtermin": 89, "intend": [23, 24], "intens": [8, 29], "interact": [88, 89], "interfac": [0, 89], "interfer": 89, "intern": 0, "interp_ord": 80, "interpol": [38, 80], "interpret": 89, "introduc": 87, "invert": [23, 28, 40, 45], "io": [0, 63, 64, 65, 66, 67, 68, 69], "ipykernel": 89, "ipympl": 88, "is_valid_valu": [1, 6], "isig": [52, 88], "issu": 89, "iter": [0, 8, 11, 12, 45, 51, 52, 55, 56, 70, 73, 74, 75, 88], "its": 24, "itself": 88, "j": [75, 81], "jame": 8, "januari": 8, "jitter": 80, "json": 89, "just": [0, 89], "justmycod": 89, "k": 75, "kaestner": 82, "kaiser": [52, 73], "kernel": 89, "keyr": 89, "keyword": [24, 30, 41, 44, 46, 50, 60], "kwarg": [23, 24, 30, 31, 40, 41, 43, 44, 45, 46, 50, 59, 60], "l2": 88, "lab": 89, "label": 88, "lak": [52, 73, 83], "lanczo": [52, 73], "last": 89, "later": 8, "latest": [88, 89], "launch": 89, "layer": 88, "least": 8, "left": [51, 52, 56, 79], "less": [8, 12, 55, 88], "letter": 8, "level": [0, 23, 28, 29, 40, 45, 52, 73, 75, 87], "levi": 81, "librari": [0, 26, 27, 89], "like": 89, "limit": [0, 22, 32, 45, 56, 58, 73, 80], "line": [0, 1, 3, 8, 11, 12, 19, 22, 55, 58, 88, 89], "linear": [38, 58], "linestyl": 88, "link": 89, "linux": 89, "list": [1, 7, 21, 45, 52, 53, 57, 58, 65, 67, 71, 73, 75], "littl": 89, "load": [0, 61, 62, 65, 66, 67, 89], "load_serialem": [0, 66], "load_serialem_seri": [0, 67], "local": 88, "locat": [0, 14, 17, 18, 19, 21, 51, 58, 84], "lock": 89, "lockfil": 89, "logan": [52, 73, 83], "logic": 84, "low": 87, "lower": [0, 32, 56, 61, 77], "m": [8, 88, 89], "machin": 88, "maco": 89, "mai": [73, 89], "main": 89, "major": [0, 89], "make": [0, 21, 89], "manifest": 89, "manual": [45, 49, 89], "manual_align": [45, 49], "manuel": 8, "mask": [0, 84], "mask_shap": [0, 84], "mass": [0, 1, 2, 3, 8, 12, 13, 14, 17, 18, 21, 55, 58, 87, 88], "master": 89, "match": [0, 24, 39], "materi": 77, "matlab": 8, "matplotlib": [32, 88], "max": [52, 88], "max_shift": 80, "maxim": 55, "maximag": [45, 58], "maximum": [22, 29, 58, 80], "maxshift": 61, "mdoc": [0, 65, 68], "mdoc_fil": [0, 68], "mdocfil": [0, 66, 67], "mean": [27, 29, 42, 48, 56, 89], "mechan": 89, "median": 48, "medium": 87, "memori": [0, 26, 27], "metadata": [8, 31, 33, 63, 66, 67, 68, 88], "method": [2, 3, 4, 5, 8, 11, 12, 13, 26, 27, 31, 34, 48, 51, 52, 53, 55, 56, 58, 70, 73, 87, 88], "miao": 81, "middl": [8, 11, 12, 42], "midpoint": [16, 55], "mill": 88, "mimic": [0, 77, 78], "min_shift": 80, "miniconda": 89, "minim": [8, 22, 58], "minimum": 80, "minshift": 61, "misalign": [0, 61, 80, 88], "misalign_stack": [0, 80], "miscellan": 0, "mismatchedtilterror": [0, 39], "mode": [23, 34, 38, 40, 45, 89], "model": [0, 61, 76, 77, 78, 79, 80], "modifi": 53, "modul": [0, 88, 89], "more": [0, 1, 8, 55, 89], "most": [0, 42, 89], "motion": [58, 88], "motiv": [8, 87], "movi": [23, 32, 40, 45], "mrc": [0, 64, 65, 66, 67, 69, 89], "mrcfile": [0, 66, 67], "multi": [0, 66, 67, 85, 86], "multiaverag": [0, 85], "multipl": [67, 68], "multiscan": 68, "multithread": [52, 73], "munch": 82, "must": [9, 32, 38, 47, 48, 51, 52, 55, 56, 58, 61, 70, 73, 76, 80], "mutli": 88, "name": [33, 64, 65, 68, 69, 88, 89], "nangl": [74, 75, 82], "natur": 8, "nature10934": [8, 88], "nav_siz": 24, "navig": [23, 24, 30, 35, 37, 40, 45, 67, 88], "navigation_shap": 10, "ncore": [52, 73], "ncpu": 86, "ndarrai": [0, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 34, 52, 56, 58, 63, 64, 65, 67, 68, 70, 71, 72, 73, 74, 75, 79, 81, 82, 84, 85], "ndimag": 80, "nearest": 38, "necessari": [73, 89], "need": [88, 89], "needl": [0, 62, 78], "neg": 51, "neighborhood": 48, "never": 89, "newli": 89, "nframe": [0, 67, 85, 86], "ni": 88, "nist": 88, "niter": 73, "node": 88, "nois": [0, 61, 76], "noise_factor": 61, "noise_typ": 76, "noisi": 76, "non": [24, 30, 41, 44, 46, 50, 51, 60, 61, 88], "none": [0, 8, 11, 12, 14, 16, 21, 23, 24, 31, 32, 33, 34, 38, 40, 42, 45, 51, 52, 53, 55, 56, 57, 58, 64, 65, 73, 79, 84], "norm": 88, "normal": [23, 29, 40, 45], "note": [26, 27, 38, 88], "notebook": [0, 88, 89], "notimplementederror": [23, 24], "np": [58, 88], "nparticl": 77, "nslice": [0, 8, 13, 17, 18, 21, 45, 49, 51, 55, 58], "ntilt": [18, 44, 60, 67, 86], "nubmer": [21, 58], "null": 89, "num_point": [0, 81], "number": [0, 8, 11, 12, 13, 17, 29, 32, 38, 39, 42, 45, 49, 51, 52, 55, 56, 57, 61, 70, 73, 74, 75, 77, 80, 81, 82, 85, 89], "numpi": [0, 8, 24, 25, 44, 58, 60, 73], "nuttal": [52, 73], "nvidia": 89, "nx": [85, 86], "ny": [74, 75, 85, 86], "nyquist": 83, "o": 81, "object": [0, 65, 70, 78, 88], "octob": 89, "off": 88, "offset": [61, 80, 88], "ol": 8, "one": [8, 24, 45, 47, 48, 52, 55, 56, 73, 89], "onli": [8, 21, 52, 55, 58, 61, 80, 89], "opencv": 88, "oper": 0, "opt": 82, "optic": 8, "optimum": [45, 51], "option": [8, 52, 55, 58, 65, 79, 84, 87], "order": [77, 80, 88], "org": [8, 81, 82, 87, 89], "orient": [45, 50], "origin": 68, "other": [0, 8, 9, 12, 20, 23, 30, 45, 47, 55, 89], "otherwis": [68, 70, 73, 89], "out": [8, 9, 20, 21, 34, 38, 47, 55, 58, 89], "outfil": 32, "output": [32, 45, 52, 56, 57, 70, 73, 88, 89], "outsid": 84, "outstand": 89, "over": 82, "overlap": 34, "overload": 31, "overrid": [23, 26, 27, 30, 40, 45], "oversampl": 81, "overwrit": [23, 31, 40, 45, 88], "p": [8, 14, 52, 55, 73, 75, 82, 89], "packag": [88, 89], "pad": [0, 8, 14, 19, 48, 55], "pad_lin": [0, 19], "paddeds": [0, 19], "page": 0, "pair": [23, 33, 40, 45], "parallel": [0, 8, 10, 11, 12, 14, 24], "paramet": [0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 29, 32, 33, 34, 38, 41, 42, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "parent": 88, "pars": [0, 68, 69], "parse_mdoc": [0, 68], "parse_mrc_head": [0, 69], "part": [0, 45, 49], "particl": 77, "particle_dens": 77, "particular": 0, "parzen": [52, 73], "pass": [23, 24, 30, 40, 41, 44, 45, 46, 50, 60], "patch": 89, "path": [0, 21, 23, 32, 33, 40, 45, 64, 65, 66, 67, 68, 69, 89], "pathlib": 33, "pc": [1, 4, 8, 55, 58], "per": [24, 32, 85], "per_row": 88, "percentag": 61, "perfectli": 0, "perform": [0, 8, 12, 14, 21, 22, 45, 51, 55, 56, 58, 70, 73, 88], "peripheri": 78, "perpendicular": [0, 8, 10, 12, 13, 22, 24, 58, 87], "phase": [0, 1, 4, 8, 15, 55, 88], "phy": 81, "physic": [8, 87], "physrevb": 81, "pick": 89, "pixel": [11, 23, 24, 35, 38, 40, 45, 49, 52, 55, 56, 61, 73, 75, 77, 80, 85, 88], "place": 89, "plane": 38, "pleas": [0, 31, 89], "plot": [22, 23, 30, 40, 42, 45, 50, 58], "plot_imag": 88, "plot_result": [22, 58], "plot_sino": [45, 50], "plot_slic": [40, 42], "plt": 88, "plugin": [8, 89], "pm": 89, "poetri": 89, "point": [8, 15, 16, 55, 81, 89], "poissonian": 76, "port": 8, "portion": 49, "posit": [0, 8, 10, 15, 16, 24, 49, 52, 55, 56, 84], "pp": [8, 87], "practic": 75, "prequisit": 89, "prereleas": 89, "prerequisit": 89, "present": [64, 74], "previous": [0, 9, 20, 47], "primari": 9, "primarili": [0, 53, 89], "print": [23, 36, 40, 45], "prior": [31, 45, 56, 57, 89], "probabl": [52, 73, 75], "process": [0, 8, 15, 89], "progress": [8, 15, 16, 52, 55, 73], "proj_geom": [74, 75], "project": [8, 11, 12, 22, 24, 32, 35, 37, 45, 51, 52, 53, 55, 56, 57, 58, 60, 61, 65, 67, 70, 73, 74, 75, 79, 83, 88], "properti": [26, 27, 34, 35, 37, 73], "provid": [0, 8, 11, 12, 21, 24, 43, 44, 53, 55, 58, 59, 60, 82, 89], "pseudo": 75, "publish": [75, 89], "pull": 89, "pure": 89, "purpos": 89, "put": 89, "pycharm": 89, "pypi": 89, "pyplot": 88, "pyproject": 89, "pyramid": 8, "pystackreg": [0, 8, 13, 16, 88], "pytest": 89, "pytest_addopt": 89, "python": [8, 89], "python_keyring_backend": 89, "quickli": 56, "r": 8, "radial": [0, 84], "radiu": [77, 78], "rais": [23, 24, 34, 44, 53, 60], "ram": [52, 73, 83], "random": 61, "randomli": 88, "rang": [0, 8, 14, 21, 55, 58, 79, 80, 82], "rate": 83, "rather": 89, "ratio": [0, 14, 17, 82], "raw": [23, 33, 40, 45, 89], "read": [0, 65, 68, 69, 88], "rec": [0, 52, 70, 71, 73, 88], "rec_stack": 51, "receiv": 33, "recfbp": 88, "recommend": [0, 53, 88], "recon": [0, 70, 71, 72, 73, 74, 75], "recon_error": [45, 51, 88], "reconstruct": [22, 40, 42, 45, 51, 52, 55, 56, 58, 70, 71, 72, 73, 74, 75, 79, 81, 89], "recsirt": 88, "recstack": [0, 23, 24, 40, 41, 42, 45, 52], "red": 88, "reduc": [34, 87], "ref": 89, "refer": [8, 11, 12, 26, 55, 89], "refin": 13, "reg": [12, 58, 86, 88], "regcom": 55, "regcomcl": 55, "region": [71, 84], "regist": [0, 8, 9, 13, 45, 55, 85, 86, 88, 89], "register_serialem_stack": [0, 86], "registr": [0, 1, 5, 8, 47, 55, 58], "regpc": 55, "regsr": 55, "regular": 0, "rel": 49, "relat": 0, "remov": [45, 53], "remove_project": [45, 53], "reoncsturct": [0, 75], "report": 89, "repositori": 89, "repres": [0, 25, 45], "request": 89, "requir": 89, "resampl": [8, 15], "residu": 70, "residual_error": 70, "resolut": [8, 12, 32, 55], "resourc": 89, "respect": [45, 49, 88], "result": [0, 25, 40, 44, 47, 49, 57, 60, 65, 67, 83, 84, 86, 89], "return": [0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 28, 29, 33, 34, 38, 40, 42, 45, 47, 48, 49, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "rev": 81, "rg": 88, "rigid": 8, "rotat": [21, 22, 38, 56, 58, 61, 80, 88], "routin": 0, "row": 84, "rpl": [23, 33, 40, 45], "rproject": [52, 73], "rsinogram": [52, 73], "run": [0, 73, 74, 75, 88, 89], "run_alg": [0, 74], "run_dart": [0, 75], "run_test": 89, "ruttimann": 8, "s40679": [8, 87], "s_invert": 28, "s_new": 53, "s_normal": 29, "same": [9, 24, 26, 31, 35, 37, 47, 89], "sampl": [0, 78, 82, 83], "samuel": 8, "sander": [8, 87, 88], "sart": [0, 51, 52, 56, 70, 73, 74, 75], "save": [23, 31, 32, 33, 40, 45], "save_movi": [23, 32, 40, 45], "save_raw": [23, 33, 40, 45], "scale": [42, 56, 88], "scale_factor": 76, "scan": [68, 81], "scikit": 8, "scipi": 80, "scott": [8, 88], "script": 89, "second": [32, 49, 78, 88], "see": [1, 8, 55, 81, 82, 89], "segment": [0, 71, 72], "select": [17, 89], "self": [23, 28, 29, 34, 38, 40, 45, 47, 53], "seri": [0, 8, 10, 12, 13, 14, 15, 16, 17, 18, 21, 22, 45, 47, 52, 53, 55, 61, 62, 66, 67, 68, 70, 73, 76, 78, 79, 80, 83, 85, 86, 89], "serialem": [0, 65, 66, 67, 68, 85, 86], "set": [0, 22, 23, 29, 30, 34, 40, 45, 52, 58, 73, 88, 89], "set_size_inch": 88, "set_tilt": [45, 54], "setter": 34, "setup": 89, "sever": [45, 48], "sh": 89, "shallow": [23, 26, 40, 45], "shape": [0, 24, 34, 44, 60, 62, 67, 74, 75, 77, 78, 84, 85, 86], "shepp": [52, 73, 83], "shift": [0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 20, 22, 23, 24, 26, 27, 31, 34, 35, 38, 40, 43, 44, 45, 47, 49, 56, 58, 61, 80, 88], "shift_and_tilt_sett": [23, 34, 40, 45], "shift_crop": [0, 20], "shift_limit": [22, 58], "shortcut": 89, "shot": 76, "should": [8, 10, 12, 19, 23, 24, 34, 35, 37, 40, 45, 55, 73, 89], "show": [52, 57, 73, 88], "show_progressbar": [8, 15, 16, 52, 55, 58, 73], "sicairo": 8, "sigma": 78, "signal": [23, 24, 30, 31, 34, 35, 37, 39, 40, 41, 43, 44, 45, 46, 51, 59, 60, 63, 64, 67, 79, 86, 88], "signal1d": [0, 43, 44, 45, 51, 59, 60], "signal2d": [0, 23, 24, 25, 30, 40, 41, 45, 46, 51, 63, 64, 67, 77, 78, 79, 86, 88], "signific": 34, "sijber": 75, "silicon": 88, "simluat": [76, 80, 88], "simpl": 89, "simplest": 89, "simplifi": 89, "simul": [61, 62, 76, 77, 78, 79, 80], "simultan": 52, "sinc": [34, 89], "singl": 68, "sino": [0, 74, 75, 88], "sino_filt": 52, "sinogram": [0, 45, 50, 51, 52, 70, 73, 74, 75, 83], "sirt": [0, 51, 52, 56, 70, 73, 74], "sirt_reconstruction_100": 88, "sirterror": 88, "sirtstack": 88, "size": [9, 10, 19, 21, 43, 47, 48, 52, 56, 58, 59, 67, 73, 77, 88], "size_interv": 77, "skimag": [23, 38, 40, 45], "slice": [0, 8, 12, 13, 14, 16, 17, 18, 21, 32, 40, 42, 43, 45, 49, 51, 52, 55, 56, 58, 59], "slicer": 53, "slider": [23, 30, 40, 45, 88], "slope": [0, 81], "so": [23, 31, 73], "sobel": [22, 48], "some": [23, 36, 40, 45, 89], "sometim": 89, "sourc": [0, 1, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "space": 79, "spatial": [0, 8, 9, 45, 47, 55], "special": [44, 60], "specif": [25, 89], "specifi": [21, 23, 31, 33, 40, 45, 55, 58, 89], "specimen": [0, 21, 62, 65, 88], "speed": 88, "spline": 80, "split": 34, "squar": [8, 51], "squeez": 73, "srm": 88, "stack": [0, 1, 5, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 40, 42, 43, 45, 48, 49, 51, 52, 54, 55, 56, 58, 59, 61, 64, 65, 66, 67, 73, 76, 80, 83, 85, 86, 87, 89], "stack_reg": [1, 5], "stack_regist": [45, 55, 58, 88], "stackreg": [1, 5, 8, 55, 88], "stackw": 87, "standard": [26, 27, 29, 42, 43, 56, 59], "start": [8, 15, 16, 23, 32, 40, 45, 54, 55, 89], "stat": [23, 36, 40, 45, 89], "statist": [23, 36, 40, 45], "statu": 89, "stem": 89, "step": [0, 71, 72], "still": 89, "stop": [23, 32, 40, 45], "store": [0, 8, 43, 89], "str": [0, 1, 7, 23, 25, 30, 32, 33, 40, 45, 64, 65, 66, 67, 68, 69], "string": [25, 87], "strive": 89, "structur": [8, 27, 87], "sub": [0, 11, 24, 44, 60], "subclass": 23, "submit": 89, "subpixel": [8, 12, 55], "substrat": 88, "suit": 89, "sum": [22, 51, 58], "suppli": 24, "support": [77, 89], "support_dens": 77, "support_radiu": 77, "sure": 89, "swap": 88, "swap_ax": 88, "system": 89, "t": [8, 87, 88], "tag": [0, 63, 89], "take": 88, "taper": 48, "target": [8, 34, 89], "task": 0, "techniqu": [0, 52, 75], "tem": 89, "termin": [51, 89], "test": [0, 1, 6, 45, 56, 57, 78], "test_align": [45, 56, 88], "test_correl": [45, 57], "than": [8, 12, 23, 55, 88, 89], "thei": [34, 47, 89], "theta": 82, "thevenaz": 8, "thi": [0, 8, 12, 23, 26, 27, 34, 40, 43, 45, 47, 51, 53, 55, 56, 59, 78, 87, 88, 89], "thick": [52, 56, 73], "thin": 88, "thing": [0, 88, 89], "third": 78, "those": 89, "thread": 89, "three": [8, 40, 42, 56, 58, 88, 89], "thresh": [51, 52, 56, 70, 73], "threshold": [0, 71, 75], "through": 89, "thurman": 8, "tight_layout": 88, "tilt": [0, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 21, 22, 23, 24, 26, 27, 31, 34, 37, 39, 40, 45, 47, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 73, 76, 78, 79, 80, 82, 85, 86, 87, 89], "tilt_align": [45, 58, 88], "tilt_com": [0, 21, 58], "tilt_maximag": [0, 22], "tilt_rang": [0, 82], "tilt_rot": [56, 80], "tilt_shift": [45, 56, 80], "tiltaxi": 88, "tiltrot": 61, "tiltseri": 89, "tiltshift": 61, "tip": 75, "titl": [32, 38, 88], "token": 89, "toler": 51, "toml": 89, "tomo": 88, "tomograph": [0, 45, 71], "tomographi": [0, 8, 23, 43, 59, 75, 81, 87, 88, 89], "tomoshift": [0, 10, 23, 24, 34, 35, 40, 43, 44, 45, 88], "tomostack": [0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 38, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 73, 76, 79, 80, 83, 86, 87, 88, 89], "tomotilt": [0, 23, 24, 34, 37, 40, 45, 59, 60, 88], "tool": [0, 89], "toolbox": [0, 52, 70, 74, 89], "toolkit": 89, "top": [32, 52, 73], "total": [14, 17], "toth": 0, "track": [0, 8, 21, 55, 58], "trans_stack": [23, 38, 40, 45], "transact": 8, "transform": [22, 23, 38, 40, 45, 58], "translat": [8, 21], "treatment": [0, 19], "triangular": [52, 73], "trigger": 89, "troubl": 89, "trtik": 82, "true": [22, 49, 51, 52, 55, 56, 58, 61, 68, 70, 73, 78, 80, 84, 88], "tukei": [52, 73], "tupl": [0, 8, 14, 32, 45, 50, 51, 55, 57, 67, 68, 70, 77, 84], "two": [0, 57, 67, 89], "type": [0, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 25, 28, 29, 33, 34, 38, 40, 42, 45, 47, 48, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89], "u": 8, "ubuntu": 89, "ucla": 88, "under": [52, 89], "underli": [26, 27, 67, 88], "uninstal": 89, "unit": 88, "unknown": 88, "unser": 8, "up": 88, "updat": 89, "upper": [32, 56, 61, 77], "upsample_factor": [8, 15], "us": [0, 8, 9, 11, 12, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 32, 33, 38, 40, 42, 43, 44, 45, 47, 51, 52, 53, 55, 56, 57, 58, 59, 60, 65, 70, 73, 74, 78, 79, 80, 81, 83, 84, 87, 88], "usag": 0, "use_cuda": [51, 52, 56, 79], "user": 89, "usnistgov": 89, "usual": 73, "util": [81, 82, 83, 84, 85, 86, 87], "valid": [0, 8], "valu": [0, 6, 7, 21, 23, 24, 34, 35, 37, 40, 43, 45, 51, 52, 55, 56, 58, 59, 60, 67, 68, 69, 70, 71, 73, 77, 78, 88], "valueerror": [0, 24, 34, 39, 44, 53, 60], "vari": 89, "variabl": 89, "varianc": [14, 17], "variou": [0, 89], "ve": 89, "version": [19, 22, 71, 83, 87, 88], "vertic": [21, 61], "via": 89, "view": [42, 78, 88, 89], "virtual": 89, "visual": [0, 45, 51, 56], "vmax": 88, "vmax_std": [42, 56], "vmin": 88, "vmin_std": [42, 56], "vol": [8, 87], "vol_geom": [74, 75], "volsiz": 77, "volum": [0, 40, 52, 56, 73, 74, 75, 77, 78, 79], "vscode": 89, "wa": [9, 20, 33], "wai": [0, 53, 89], "warn": 89, "we": [88, 89], "web": 89, "websit": 88, "weight": [0, 87], "weight_stack": [0, 87], "welcom": 89, "well": 89, "what": 89, "whatev": 89, "wheel": 89, "when": [0, 8, 39, 51, 55, 58, 87], "where": 70, "whether": [34, 51, 52, 55, 56, 79, 89], "which": [0, 8, 9, 11, 12, 14, 15, 17, 18, 20, 21, 25, 32, 38, 47, 49, 51, 52, 55, 56, 57, 58, 61, 64, 70, 73, 80, 83, 88, 89], "widget": 88, "width": [23, 29, 40, 45], "window": [0, 87, 89], "wish": [0, 89], "within": 89, "without": [0, 19, 89], "work": [34, 88, 89], "workaround": 89, "would": 89, "written": 31, "x": [10, 12, 13, 15, 16, 17, 21, 24, 35, 38, 44, 49, 58, 67, 70, 77, 84, 85, 88], "xml": 89, "xrang": [8, 14, 55], "xshift": [14, 23, 38, 40, 45, 49, 88], "xslice": [40, 42], "xy": 32, "xz": 32, "y": [10, 12, 13, 15, 16, 24, 35, 38, 44, 49, 52, 56, 61, 67, 70, 73, 77, 80, 84, 85, 88], "y_onli": [61, 80], "yaml": 89, "yml": 89, "you": [0, 88, 89], "your": [0, 88, 89], "yshift": [11, 23, 38, 40, 45, 49, 88], "yslice": 42, "yz": 32, "z": [70, 77, 88], "zero": [24, 34], "zslice": 42, "\u00e5ngstr\u00f6m": 8}, "titles": ["General Information", "etspy.AlignmentMethod", "etspy.AlignmentMethod.COM", "etspy.AlignmentMethod.COM_CL", "etspy.AlignmentMethod.PC", "etspy.AlignmentMethod.STACK_REG", "etspy.AlignmentMethod.is_valid_value", "etspy.AlignmentMethod.values", "etspy.align.align_stack", "etspy.align.align_to_other", "etspy.align.apply_shifts", "etspy.align.calc_shifts_cl", "etspy.align.calc_shifts_com_cl", "etspy.align.calculate_shifts_com", "etspy.align.calculate_shifts_conservation_of_mass", "etspy.align.calculate_shifts_pc", "etspy.align.calculate_shifts_stackreg", "etspy.align.get_best_slices", "etspy.align.get_coms", "etspy.align.pad_line", "etspy.align.shift_crop", "etspy.align.tilt_com", "etspy.align.tilt_maximage", "etspy.base.CommonStack", "etspy.base.CommonStack.__init__", "etspy.base.CommonStack.change_data_type", "etspy.base.CommonStack.copy", "etspy.base.CommonStack.deepcopy", "etspy.base.CommonStack.invert", "etspy.base.CommonStack.normalize", "etspy.base.CommonStack.plot", "etspy.base.CommonStack.save", "etspy.base.CommonStack.save_movie", "etspy.base.CommonStack.save_raw", "etspy.base.CommonStack.shift_and_tilt_setter", "etspy.base.CommonStack.shifts", "etspy.base.CommonStack.stats", "etspy.base.CommonStack.tilts", "etspy.base.CommonStack.trans_stack", "etspy.base.MismatchedTiltError", "etspy.base.RecStack", "etspy.base.RecStack.__init__", "etspy.base.RecStack.plot_slices", "etspy.base.TomoShifts", "etspy.base.TomoShifts.__init__", "etspy.base.TomoStack", "etspy.base.TomoStack.__init__", "etspy.base.TomoStack.align_other", "etspy.base.TomoStack.filter", "etspy.base.TomoStack.manual_align", "etspy.base.TomoStack.plot_sinos", "etspy.base.TomoStack.recon_error", "etspy.base.TomoStack.reconstruct", "etspy.base.TomoStack.remove_projections", "etspy.base.TomoStack.set_tilts", "etspy.base.TomoStack.stack_register", "etspy.base.TomoStack.test_align", "etspy.base.TomoStack.test_correlation", "etspy.base.TomoStack.tilt_align", "etspy.base.TomoTilts", "etspy.base.TomoTilts.__init__", "etspy.datasets.get_catalyst_data", "etspy.datasets.get_needle_data", "etspy.io.get_dm_tilts", "etspy.io.get_mrc_tilts", "etspy.io.load", "etspy.io.load_serialem", "etspy.io.load_serialem_series", "etspy.io.parse_mdoc", "etspy.io.parse_mrc_header", "etspy.recon.astra_error", "etspy.recon.dart_segment", "etspy.recon.get_dart_boundaries", "etspy.recon.run", "etspy.recon.run_alg", "etspy.recon.run_dart", "etspy.simulation.add_noise", "etspy.simulation.create_catalyst_model", "etspy.simulation.create_cylinder_model", "etspy.simulation.create_model_tilt_series", "etspy.simulation.misalign_stack", "etspy.utils.calc_est_angles", "etspy.utils.calc_golden_ratio_angles", "etspy.utils.filter_stack", "etspy.utils.get_radial_mask", "etspy.utils.multiaverage", "etspy.utils.register_serialem_stack", "etspy.utils.weight_stack", "ETSpy Demo", "ETSpy"], "titleterms": {"abstract": 23, "align": [0, 88], "alongsid": 88, "also": [26, 27], "anaconda": 89, "analysi": 88, "axi": 88, "backproject": 88, "basic": 89, "bin": 88, "brows": 88, "catalyst": 88, "central": 88, "compon": 89, "constructor": [23, 40, 43, 45, 59], "coverag": 89, "cpu": 88, "data": [0, 88], "dataset": 0, "debug": 89, "demo": 88, "develop": 89, "entir": 88, "enum": 1, "error": 88, "etspi": [88, 89], "exampl": 0, "experiment": 88, "file": 0, "filter": 88, "gener": 0, "higli": 89, "i": 0, "imag": 88, "import": 88, "inform": 0, "instal": 89, "instruct": 89, "jupyt": 89, "load": 88, "method": [0, 1, 23, 40, 45], "needl": 88, "new": 89, "note": [0, 89], "o": 0, "option": 89, "pip": 89, "plot": 88, "pre": 89, "prefer": 89, "project": 89, "properti": [23, 40, 45], "rebin": 88, "recommend": 89, "reconstruct": [0, 88], "registr": 88, "relat": 89, "releas": 89, "remov": 89, "result": 88, "sampl": 88, "save": 88, "see": [26, 27], "seri": 88, "shape": 88, "signal": 0, "simul": [0, 88], "singl": 88, "sinogram": 88, "sirt": 88, "slice": 88, "stack": 88, "test": 89, "tilt": 88, "tip": [0, 89], "us": 89, "usag": 89, "util": 0, "valu": 1, "version": 89, "when": 89}})